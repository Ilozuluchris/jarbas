from itertools import chain

from celery import shared_task
from rows.fields import FloatField

from jarbas.chamber_of_deputies.fields import DateAsStringField, IntegerField
from jarbas.chamber_of_deputies.models import Reimbursement


INTEGERS = (
    'applicant_id',
    'batch_number',
    'congressperson_document',
    'congressperson_id',
    'document_id',
    'document_type',
    'installment',
    'month',
    'subquota_group_id',
    'subquota_number',
    'term',
    'term_id',
    'year'
)

FLOATS = (
    'document_value',
    'reimbursement_value_total',
    'remark_value',
    'total_net_value'
)

TYPES = tuple(chain(
    ((field, IntegerField) for field in INTEGERS),
    ((field, FloatField) for field in FLOATS),
    (('issue_date', DateAsStringField),)
))

RENAME = (
    ('subquota_number', 'subquota_id'),
    ('reimbursement_value_total', 'total_reimbursement_value'),
)


@shared_task
def create_or_update_reimbursement(row):
    """
    :param row: (dict) key/values maching Reimbursement model
    """
    data = transform_row(row)
    kwargs = dict(document_id=data['document_id'], defaults=data)
    Reimbursement.objects.update_or_create(**kwargs)


def transform_row(row):
    """Read the dict generated by rows, rename some keys and fix data types"""
    for key, type_ in TYPES:
        value = row.get(key)
        row[key] = type_.deserialize(value)

    for old, new in RENAME:
        row[new] = row.pop(old)

    return row
